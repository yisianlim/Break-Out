class Brick {
  PImage IceQueenBrick = loadImage("IceQueenBrick.png");
  PImage SizerBrick = loadImage("SizerBrick.png");
  PImage AddLives = loadImage("LiveBrick.png");
  String colour;
  int BrickWidth = 100;
  int BrickHeight = 35;
  boolean brickActive;
  int count = 0;

  int speed = 3; //for the purpose of the special brick
  boolean hitSpecialBrick = false; //has the ball hit the special brick?

  float x, y;

  Brick(String col, float x, float y) {
    this.colour = col;
    this.x=x;
    this.y=y;
    brickActive = true;
  }

//the draw color coding for the bricks 
  void draw() {
    if (brickActive) { //only draw if the brick is active!
      if (colour.equals("red")) {
        if (count == 0)fill(152, 30, 52);//fill(89, 20, 13);
        if (count == 1)fill(112, 41, 37);
        if (count == 2)fill(104, 66, 64);
      }
      if (colour.equals("orange")) fill(194, 90, 39);
      if (colour.equals("yellow")) fill(247, 223, 102);
      if (colour.equals("blue")) fill(199, 247, 102);//fill(35, 165, 222);
      if(colour.equals("green")) fill(128,195,28);
      if(colour.equals("halloween"))fill(255,91,0);
      rect(x, y, BrickWidth, BrickHeight);
      
      
      if (colour.equals("special")) image(IceQueenBrick, x, y, BrickWidth, BrickHeight);
      if (colour.equals("sizer")) image(SizerBrick, x, y, BrickWidth, BrickHeight);
      if (colour.equals("live")) image(AddLives, x, y, BrickWidth, BrickHeight);
    }
  }

  boolean isActive() {
    return brickActive;
  }

  //check if it is the special brick
  boolean SpecialBrick() {
    if (this.colour.equals("special") || this.colour.equals("sizer") || this.colour.equals("live")) {
      return true;
    }
    return false;
  }

//the falling mechanism as the special brick falls
  void specialBrickMove() {
    if (y>height) brickActive=false; //if the brick falls all the way to the bottom, then deactivate it
    if (brickActive && hitSpecialBrick && this.colour.equals("special")) {
      y+=speed;//fall down to the end
      //check if the paddle catches it, then transform the paddle into ice queen mode
      if (paddle.PaddleCaughtTheSpecialBrick(this)) {
        game.points+=10; //add another 10 points if the player catches the brick
        paddle.state = "transformed";
        brickActive = false;
      }
    } else if (brickActive && hitSpecialBrick && this.colour.equals("sizer")) {
      y+=speed;//fall down to the end
      if (paddle.PaddleCaughtTheSpecialBrick(this)) {
        game.points+=10; //add another 10 points if the player catches the brick
        paddle.state = "sizer";
        brickActive = false;
      }
    } else if (brickActive && hitSpecialBrick && this.colour.equals("live")) {
      y+=speed;//fall down to the end
      if (paddle.PaddleCaughtTheSpecialBrick(this)) {
        game.points+=10; //add another 10 points if the player catches the brick
        game.lives+=1; //player gets a live 
        brickActive = false;
      }
    }
  }

//deactivate the brick if once it gets hit!
  void deactivate() {
    if (SpecialBrick()) {
      hitSpecialBrick = true;
      game.ScoreUpdate(colour);
    } else if (colour.equals("red")) {
      count++;
      if (count == 3) {
        brickActive = false;
        fill(38, 69, 81);
        game.ScoreUpdate(colour);
      }
    } else {
      brickActive = false;
      fill(38, 69, 81);
      game.ScoreUpdate(colour);
    }
  }
}
